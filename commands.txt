1. Hand-shaking (for serial port only)
   HOST   sends  0x55 0x55 0x55 ... 0x55
   DEVICE replys 0xAA 0xAA 0xAA ... 0xAA
   HOST can confirm that DEVICE is ready when receives 0xAA and can continue the communication.

2. Packet format (in hex) in communication between HOST and DEVICE
     {start} {length} {payload} {crc16}
     
     {start}    1-byte
                0xAA if packet is from HOST to DEVICE
                0x55 if packet is from DEVICE to HOST

     {length}   1-byte
                number of bytes in payload = length+1

     {payload}  1~256-byte
                payload of the packet

     {crc16}    2-byte
                crc16 of payload part
                crc16 = 0x0000 means bypass CRC checking

3. Payload format in a packet
   > HOST writes DEVICE register:
     [type] [reg_addr] [byte0] [byte1] ... [byteN]
   > DEVICE acknoledges HOST write operation:
     [type] [reg_addr] [num_of_byte]
   > HOST read register request:
     [type] [reg_addr] [num_of_byte]
   > DEVICE returns register data:
     [type] [reg_addr] [byte0] [byte1] ... [byteN]

     type[7]        1 = This is a DEVICE_ACK packet if the packet is sent from DEVICE (starts with 0x55) or
                                a HOST_READ_REQUEST packet if the packet is sent from HOST (starts with 0xAA)
                    0 = data packet
     type[6:2]      reserved
     type[1:0]      0 = no     reg_addr in payload
                    1 = 8-bit  reg_addr in payload (we always use this in this bootloader application)
                    2 = 16-bit reg_addr in payload
                    3 = 32-bit reg_addr in payload

4. Register memory map
    // Device information & status
    REG_00h[128] RO   ASCII       MCU Part Number
    REG_01h[128] RO   ASCII       MCU UUID
    REG_02h[3]   RO   uint8_t[]   Bootloader Version
    REG_03h[4]   RO   uint32_t    FLASH size
    REG_04h[4]   RO   uint32_t    FLASH start address
    REG_05h[4]   RO   uint32_t    total EEPROM size
    REG_06h[4]   RO   uint32_t    EEPROM page size
    REG_07h[1]   RO   uint8_t     status
                                  0 = Idle
                                  1 = Busy with processing command
                                  2 = Failure
                                  3 = Success
    // MCU FLASH operation
    REG_10h[1]   RW   uint8_t     write 1 = a full chip flash erase
                                  read  1 = busy with full chip flash erase
                                  read  0 = full chip flash erase done
    REG_11h[4]   RO   uint32_t    FLASH address

    // MCU EEPROM operation
    REG_20h[1]   RW   uint8_t     write 1 = EEPROM erase
    REG_21h[4]   RO   uint16_t    Size of EEPROM
    REG_22h[2]   RO   uint16_t    Size of a EEPROM Page
    REG_0Fh[1]   RO   uint8_t     Latched Errors (Read clear)
                                  0x00 = OK
                                  0x01 = Invalid FLASH page
                                  0x02 = FLASH page data overflow
                                  0x04 = Incorrect number of data for FLASH write
                                  0x10 = Invalid EEPROM page
                                  0x20 = EEPROM page data overflow
                                  0x40 = Incorrect number of data for EEPROM write
                                  0x80 = SCRATCH-PAD data overflow

    // SCRATCH-PAD operations
    REG_10h[1]   WO   uint8_t     0x01 = Reset the SCRATCH-PAD pointer
    REG_11h[2]   RW   uint16_t    Write data to SCRATCH-PAD

    // FLASH operations
    REG_20h[2]   RW   uint16_t    Select FLASH Page for erase/read/write/crc operation
    REG_21h[1]   WO   uint8_t     0x01 = Erase the selected FLASH page
                                  0x02 = Write SCRATCH-PAD data to FLASH
                                  0x03 = Calculate CRC-16 of the selected FLASH page
                                  0xFF = Erase all FLASH pages
    REG_22h[128] RO   uint8_t[]   Read FLASH data
    REG_23h[2]   RO   uint16_t    CRC-16 of the selected FLASH page

    // EEPROM operations
    REG_30h[2]   RW   uint16_t    Select EEPROM Page for erase/read/write/crc operation
    REG_31h[1]   WO   uint8_t     0x01 = Erase the selected EEPROM page
                                  0x02 = Write SCRATCH-PAD data to EEPROM
                                  0x03 = Calculate CRC-16 of the selected EEPROM page
                                  0xFF = Erase all EEPROM pages
    REG_32h[128] RO   uint8_t[]   Read EEPROM data
    REG_33h[2]   RO   uint16_t    CRC-16 of the selected EEPROM page