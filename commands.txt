1. Hand-shaking (for serial port only)
   HOST   sends  0x55 0x55 0x55 ... 0x55
   DEVICE replys 0xAA 0xAA 0xAA ... 0xAA
   HOST can confirm that DEVICE is ready when receives 0xAA and can continue the communication.

2. Packet format (in hex) in communication between HOST and DEVICE
     {start} {length} {payload} {crc8}
     
     {start}    1 byte
                0xAA if packet is from HOST to DEVICE
                0x55 if packet is from DEVICE to HOST

     {length}   1 byte
                number of bytes in payload = length+1

     {payload}  1~256 bytes
                payload of the packet

     {crc8}     1 byte
                crc8 of payload part
                crc8 = 0x00 means bypass CRC checking

3. Payload format in a packet
   > HOST writes DEVICE register:
     [type] [reg_addr] [byte0] [byte1] ... [byteN]
   > DEVICE acknoledges HOST write operation:
     [type] [reg_addr] [num_of_byte]
   > HOST read register request:
     [type] [reg_addr] [num_of_byte]
   > DEVICE returns register data:
     [type] [reg_addr] [byte0] [byte1] ... [byteN]

     type       1-byte
                packet payload type
                0x00 = write register packet
                0x01 = read register request packet
                0x02 = acknowledge packet
                0x03 = reply packet
                0x04 = interrupt packet

4. Register memory map
    // Device information & status
    REG_00h[128] RO   ASCII       MCU Part Number
    REG_01h[128] RO   ASCII       MCU UUID
    REG_02h[3]   RO   uint8_t[]   Bootloader Version
    REG_03h[4]   RO   uint32_t    FLASH start address
    REG_04h[4]   RO   uint32_t    FLASH size
    REG_05h[4]   RO   uint32_t    FLASH segmentation size
    REG_06h[4]   RO   uint32_t    EEPROM size
    REG_07h[4]   RO   uint32_t    EEPROM segmentation size

    // MCU FLASH operation
    REG_10h[1]   RO   uint8_t     status
                                  [7]   STS_BUSY
                                  [6]   STS_FAIL
                                  [5:0] Last FLASH operation status
                                        > STS_BUSY=1, STS_FAIL=X (IN PROGRESS)
                                        00h=Reserved
                                        01h=CMD is captured but not processed
                                        02h=CMD checking is in progress
                                        03h=CMD execution is in progress
                                        04h-3Fh=Reserved
                                        > STS BUSY=0, STS_FAIL=0 (SUCCESS)
                                        00h=Reserved
                                        01h=CMD completed successfully without specific message
                                        02h-3Fh=Reserved
                                        > STS_BUSY=0, STS_FAIL=1 (FAILED)
                                        00h=Reserved
                                        01h=Unknown error
                                        02h=Parameter range error or not supported
                                        03h-0Fh=Reserved
                                        10h=chip FLASH erase error
                                        11h=invalid FLASH address
                                        12h=fail to write data to FLASH
                                        13h-3Fh=Reserved
    REG_11h[1]   RW   uint8_t     Chip FLASH Erase
                                  write 1 = chip FLASH erase
                                  read  1 = chip FLASH erase in progress
                                  read  0 = chip FLASH erase done
    REG_12h[4]   RW   uint32_t    FLASH address
    REG_13h[128] RW   uint8_t[]   R/W FLASH data
    REG_14h[1]   RW   uint8_t     Calculate CRC-8
                                  write 1 = calculate crc-8 of the selected segmentation
                                  read  1 = calculate crc-8 in progress
                                  read  0 = calculate crc-8 done
    REG_15h[1]   RO   uint8_t     CRC-8 result

    // MCU EEPROM operation
    REG_20h[1]   RO   uint8_t     status
                                  [7]   STS_BUSY
                                  [6]   STS_FAIL
                                  [5:0] Last EEPROM operation status
                                        > STS_BUSY=1, STS_FAIL=X (IN PROGRESS)
                                        00h=Reserved
                                        01h=CMD is captured but not processed
                                        02h=CMD checking is in progress
                                        03h=CMD execution is in progress
                                        04h-3Fh=Reserved
                                        > STS BUSY=0, STS_FAIL=0 (SUCCESS)
                                        00h=Reserved
                                        01h=CMD completed successfully without specific message
                                        02h-3Fh=Reserved
                                        > STS_BUSY=0, STS_FAIL=1 (FAILED)
                                        00h=Reserved
                                        01h=Unknown error
                                        02h=Parameter range error or not supported
                                        03h-0Fh=Reserved
                                        10h=chip EEPROM erase error
                                        11h=invalid EEPROM address
                                        12h=fail to write data to EEPROM
                                        13h-3Fh=Reserved
    REG_21h[1]   RW   uint8_t     Chip EEPROM Erase
                                  write 1 = chip EEPROM erase
                                  read  1 = chip EEPROM erase in progress
                                  read  0 = chip EEPROM erase done
    REG_22h[4]   RW   uint32_t    EEPROM address
    REG_23h[128] RW   uint8_t[]   R/W EEPROM data
    REG_24h[1]   RW   uint8_t     Calculate CRC-8
                                  write 1 = calculate crc-8 of the selected segmentation
                                  read  1 = calculate crc-8 in progress
                                  read  0 = calculate crc-8 done
    REG_25h[1]   RO   uint8_t     CRC-8 result