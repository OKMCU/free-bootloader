1. Hand-shaking (for serial port only)
   MASTER send 0x55 0x55 0x55 ... 0x55
   SLAVE reply 0xAA 0xAA 0xAA ... 0xAA
   MASTER can confirm that SLAVE is ready when receives 0xAA and can continue the communication.

2. Packet Format (in hex) between MASTER and SLAVE
   > MASTER Write Register:
     AA{T=n}{RegAddr}{D0}{D1}...{Dn}{CRC8}
   > SLAVE ACK Write Register:
     55{81}{RegAddr}{CRC8}
   > MASTER Read Register Request:
     AA{82}{RegAddr}{CRC8}
   > SLAVE Reply Read Register Request:
     55{T=n}{RegAddr}{D0}{D1}...{Dn}{CRC8}
                 
     T Value     Packet Type
     T=0~128     Data (length)
     T=0x81      Acknoledgement of Write Register Operation
     T=0x82      Read Register Request

3. Register memory map
    // Device information & status
    REG_00h[128] RO   ASCII       MCU Part Number
    REG_01h[128] RO   ASCII       MCU UUID
    REG_02h[3]   RO   uint8_t[]   Bootloader Version
    REG_03h[4]   RO   uint32_t    Bgn of FLASH Address
    REG_04h[2]   RO   uint16_t    Size of a FLASH Page
    REG_05h[2]   RO   uint16_t    Number of FLASH Page
    REG_06h[1]   RO   uint8_t     Erase Time per FLASH Page
    REG_07h[1]   RO   uint8_t     Flash cell width
    REG_08h[2]   RO   uint16_t    Size of scratch pad for buffering FLASH/EEPROM memory content
    REG_09h[1]   RO   uint8_t     FLASH Write Time (in ms) per FLASH write operation
    REG_0Ah[4]   RO   uint16_t    Size of EEPROM
    REG_0Bh[2]   RO   uint16_t    Size of a EEPROM Page
    REG_0Fh[1]   RO   uint8_t     Latched Errors (Read clear)
                                  0x00 = OK
                                  0x01 = Invalid FLASH page
                                  0x02 = FLASH page data overflow
                                  0x04 = Incorrect number of data for FLASH write
                                  0x10 = Invalid EEPROM page
                                  0x20 = EEPROM page data overflow
                                  0x40 = Incorrect number of data for EEPROM write
                                  0x80 = SCRATCH-PAD data overflow

    // SCRATCH-PAD operations
    REG_10h[1]   WO   uint8_t     0x01 = Reset the SCRATCH-PAD pointer
    REG_11h[2]   RW   uint16_t    Write data to SCRATCH-PAD

    // FLASH operations
    REG_20h[2]   RW   uint16_t    Select FLASH Page for erase/read/write/crc operation
    REG_21h[1]   WO   uint8_t     0x01 = Erase the selected FLASH page
                                  0x02 = Write SCRATCH-PAD data to FLASH
                                  0x03 = Calculate CRC-16 of the selected FLASH page
                                  0xFF = Erase all FLASH pages
    REG_22h[128] RO   uint8_t[]   Read FLASH data
    REG_23h[2]   RO   uint16_t    CRC-16 of the selected FLASH page

    // EEPROM operations
    REG_30h[2]   RW   uint16_t    Select EEPROM Page for erase/read/write/crc operation
    REG_31h[1]   WO   uint8_t     0x01 = Erase the selected EEPROM page
                                  0x02 = Write SCRATCH-PAD data to EEPROM
                                  0x03 = Calculate CRC-16 of the selected EEPROM page
                                  0xFF = Erase all EEPROM pages
    REG_32h[128] RO   uint8_t[]   Read EEPROM data
    REG_33h[2]   RO   uint16_t    CRC-16 of the selected EEPROM page